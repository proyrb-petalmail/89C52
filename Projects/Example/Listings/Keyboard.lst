C51 COMPILER V9.60.7.0   KEYBOARD                                                          01/02/2024 09:12:21 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE KEYBOARD
OBJECT MODULE PLACED IN .\Objects\Keyboard.obj
COMPILER INVOKED BY: C:\Program Files\Keil_v5\C51\BIN\C51.EXE Keyboard\Keyboard.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTE
                    -XTEND PRINT(.\Listings\Keyboard.lst) TABS(3) OBJECT(.\Objects\Keyboard.obj)

line level    source

   1          #include "Keyboard.h"
   2          
   3          sfr __keyboard__ = 0x90;
   4          
   5          unsigned char Keyboard_Value(void) {
   6   1         static unsigned char last_value; //上一次获取的键值
   7   1         unsigned char last_state; //执行之前引脚的状态
   8   1         unsigned char row; //当前扫描的行
   9   1         unsigned char row_value; //当前扫描的行的键值
  10   1         unsigned char now_value; //此次获取的键值
  11   1         unsigned char key_count; //当前按下的按键个数
  12   1         unsigned char value; //实际返回的键值
  13   1      
  14   1         last_state = __keyboard__; //记录执行之前引脚的状态
  15   1         for(key_count = now_value = row = 0; row < 4; row++) {
  16   2            __keyboard__ = 0xFF; //进行必要的初始化操作
  17   2            __keyboard__ = ~(0x80 >> row); //扫描当前行
  18   2            switch((~__keyboard__) & 0x0F) {
  19   3               case 0x00:
  20   3                  row_value = 0; //没有按键按下
  21   3                  break;
  22   3               case 0x01:
  23   3                  row_value = row * 4 + 4;
  24   3                  key_count++;
  25   3                  break;
  26   3               case 0x02:
  27   3                  row_value = row * 4 + 3;
  28   3                  key_count++;
  29   3                  break;
  30   3               case 0x04:
  31   3                  row_value = row * 4 + 2;
  32   3                  key_count++;
  33   3                  break;
  34   3               case 0x08:
  35   3                  row_value = row * 4 + 1;
  36   3                  key_count++;
  37   3                  break;
  38   3               default:
  39   3                  row_value = 17; //多个按键按下
  40   3                  key_count += 2;
  41   3                  break;
  42   3            }
  43   2            if(key_count > 1) {
  44   3               now_value = 17; //如果有多个按键被按下则返回其他键值
  45   3               break;
  46   3            }
  47   2            if(row_value != 0) {
  48   3               now_value = row_value; //如果当前行有按键按下则返回对应键值
  49   3            }
  50   2         }
  51   1         __keyboard__ = last_state; //将引脚恢复到执行之前的状态
  52   1         value = (now_value == 0 && 0 < last_value && last_value < 17) ? last_value : 0; //获取单个按键抬
             -起时对应的键值
  53   1         last_value = now_value; //更新上一次获取的键值
C51 COMPILER V9.60.7.0   KEYBOARD                                                          01/02/2024 09:12:21 PAGE 2   

  54   1      
  55   1         return value; //返回键值
  56   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    152    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
